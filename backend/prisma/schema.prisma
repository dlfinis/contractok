// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int  @id @default(autoincrement())
  worldId String @unique
  name  String?
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contractsCreated Contract[] @relation("CreatedContracts")
  contractsReceived Contract[] @relation("ReceivedContracts")
}

model WorldIDLink {
  id                Int      @id @default(autoincrement())
  nullifier_hash    String   @unique
  action            String
  signal            String?
  verification_level String?
  linkedAt          DateTime @default(now())
}

model Contract {
  codigoVinculacion String @unique @db.Char(4)
  id              Int      @id @default(autoincrement())
  tipo            String  // servicio/venta/reparacion
  monto           Float
  fee             Float
  plazoEntrega    DateTime
  descripcion     String?
  estado          String   // pendiente, aprobado, rechazado, completado
  creadorWorldId  String
  creador         User     @relation("CreatedContracts", fields: [creadorWorldId], references: [worldId])
  contraparteWorldId String?
  contraparte     User?    @relation("ReceivedContracts", fields: [contraparteWorldId], references: [worldId])
  aprobadoCreador     Boolean @default(false)
  aprobadoContraparte Boolean @default(false)
  deadlineAprobacion  DateTime?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
